#include <Wire.h>
#include <VL53L0X.h>
#include <SparkFunSX1509.h>
#include <Servo.h>

const byte SX1509_ADDRESS = 0x3F;
#define VL53L0X_ADDRESS_START 0x30


// The number of sensors in your system.
const uint8_t sensorCount = 1;

// The Arduino pin connected to the XSHUT pin of each sensor.
const uint8_t xshutPins[8] = {0,1,2,3,4,5,6,7};

SX1509 io; // Create an SX1509 object to be used throughout
VL53L0X sensors[sensorCount];


Servo myservoA,myservoB;      // create servo object to control a servo

void setup()
{  
  myservoA.attach(1);  // attaches the servo  to the servo object useing pin 3

  myservoB.attach(0);  // attaches the servo  to the servo object useing pin 3
  while (!Serial) {}
  Serial.begin(115200);

  io.begin(SX1509_ADDRESS);

  Wire.begin();
  Wire.setClock(400000); // use 400 kHz I2C

  // Disable/reset all sensors by driving their XSHUT pins low.
  for (uint8_t i = 0; i < sensorCount; i++)
  {
    io.pinMode(xshutPins[i], OUTPUT);
    io.digitalWrite(xshutPins[i], LOW);
    //pinMode(xshutPins[i], OUTPUT);
    //digitalWrite(xshutPins[i], LOW);
  }

  // Enable, initialize, and start each sensor, one by one.
  for (uint8_t i = 0; i < sensorCount; i++)
  {
    // Stop driving this sensor's XSHUT low. This should allow the carrier
    // board to pull it high. (We do NOT want to drive XSHUT high since it is
    // not level shifted.) Then wait a bit for the sensor to start up.
    //pinMode(xshutPins[i], INPUT);
    io.digitalWrite(xshutPins[i], HIGH);
    delay(10);

    sensors[i].setTimeout(500);
    if (!sensors[i].init())
    {
      Serial.print("Failed to detect and initialize sensor ");
      Serial.println(i);
      while (1);
    }

    // Each sensor must have its address changed to a unique value other than
    // the default of 0x29 (except for the last one, which could be left at
    // the default). To make it simple, we'll just count up from 0x2A.
    sensors[i].setAddress(VL53L0X_ADDRESS_START + i);

    sensors[i].startContinuous(50);
  }



}

 

void loop()
{

  for (uint8_t i = 0; i < sensorCount; i++)
  {
    if (sensors[i].readRangeContinuousMillimeters() > 200) 
    {
      myservoA.writeMicroseconds(1000);      // sets the servo position full speed backward
      myservoB.writeMicroseconds(1000);      // sets the servo position full speed backward
      delay(500);                           // waits for the servo to get there
   
    }
    else 
    {
      myservoB.writeMicroseconds(1200);      // sets the servo position full speed backward
      myservoA.writeMicroseconds(1950);      // sets the servo position full speed backward
      delay(500);                           // waits for the servo to get there
    }
    Serial.print(sensors[i].readRangeContinuousMillimeters());
    if (sensors[i].timeoutOccurred()) { Serial.print(" TIMEOUT"); }
    Serial.print('\t');
  }
  Serial.println();
                         // waits for the servo to get there

}
